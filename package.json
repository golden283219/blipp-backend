{
  "name": "blipp-backend",
  "version": "1.0.0",
  "description": "JS Projekt",
  "keywords": [
    "loopback-application",
    "loopback"
  ],
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "engines": {
    "node": ">=10.16"
  },
  "scripts": {
    "build": "lb-tsc",
    "build:watch": "lb-tsc --watch",
    "lint": "npm run prettier:check && npm run eslint",
    "lint:fix": "npm run eslint:fix && npm run prettier:fix",
    "prettier:cli": "lb-prettier \"**/*.ts\" \"**/*.js\"",
    "prettier:check": "npm run prettier:cli -- -l",
    "prettier:fix": "npm run prettier:cli -- --write",
    "eslint": "lb-eslint --report-unused-disable-directives .",
    "eslint:fix": "npm run eslint -- --fix",
    "pretest": "npm run clean && npm run build",
    "test": "lb-mocha --allow-console-logs \"dist/__tests__\"",
    "posttest": "npm run lint",
    "test:dev": "lb-mocha --allow-console-logs dist/__tests__/**/*.js && npm run posttest",
    "docker:setup": "eval \"$(docker-machine env default)\"",
    "docker:build-staging": "docker build . --build-arg stage=staging -t blipp",
    "docker:tag-staging": "docker tag blipp augustposner/blipp",
    "docker:push-staging": "docker push augustposner/blipp",
    "docker:run-staging": "docker run -it -p 3000:3000 -p 3001:3001 -d blipp",
    "docker-staging": "npm run docker:build-staging && npm run docker:tag-staging && npm run docker:push-staging",
    "docker:build-prod": "docker build . --build-arg stage=production -t orderfyprod",
    "docker:tag-prod": "docker tag orderfyprod augustposner/orderfyprod",
    "docker:push-prod": "docker push augustposner/orderfyprod",
    "docker:run-prod": "docker run -it -p 3002:3002 -p 3003:3003 -d augustposner/orderfyprod",
    "docker-prod": "npm run docker:build-prod && npm run docker:tag-prod && npm run docker:push-prod",
    "migrate": "node ./dist/migrate",
    "openapi-spec": "node ./dist/openapi-spec",
    "prestart": "npm run build",
    "start-app": "node -r source-map-support/register .",
    "start-dev": "export NODE_ENV=development && npm run build && npm run start-app",
    "start-staging": "export NODE_ENV=staging && npm run build && npm run start-app",
    "set-staging": "export NODE_ENV=staging",
    "set-prod": "export NODE_ENV=production",
    "start": "export NODE_ENV=staging && npm run start-app",
    "clean": "lb-clean dist *.tsbuildinfo .eslintcache",
    "uploadScript": "sudo bash ./scripts/upload.sh",
    "ssh": "ssh -i orderfy-private-key.pem jacob@main.orderfyapi.link",
    "ssh:run-staging": "ssh -i orderfy-private-key.pem jacob@main.orderfyapi.link -t 'docker stop $(docker ps -a -q) && docker rmi -f $(docker images -a -q) && docker system prune --volumes -f && docker run -it -p 3000:3000 -p 3001:3001 --name staging augustposner/blipp; bash -l'",
    "ssh:run-prod": "ssh -i orderfy-private-key.pem jacob@main.orderfyapi.link -t 'docker stop $(docker ps -a -q) && docker rmi -f $(docker images -a -q) && docker system prune --volumes -f && docker run -it -p 3002:3002 -p 3003:3003 --name prod augustposner/orderfyprod; bash -l'",
    "ssh:run-staging-no-cleanup": "ssh -i orderfy-private-key.pem jacob@main.orderfyapi.link -t 'docker stop staging || true && docker rm staging && docker pull augustposner/blipp && docker run -it -p 3000:3000 -p 3001:3001 --name staging augustposner/blipp; bash -l'",
    "ssh:run-prod-no-cleanup": "ssh -i orderfy-private-key.pem jacob@main.orderfyapi.link -t 'docker stop prod || true && docker rm prod || true && docker pull augustposner/orderfyprod && docker run -it -p 3002:3002 -p 3003:3003 --name prod augustposner/orderfyprod; bash -l'",
    "upload-staging": "npm run docker-staging && npm run ssh:run-staging-no-cleanup",
    "upload-prod": "npm run docker-prod && npm run ssh:run-prod-no-cleanup"
  },
  "repository": {
    "type": "git"
  },
  "author": "",
  "license": "",
  "files": [
    "README.md",
    "dist",
    "src",
    "!*/__tests__"
  ],
  "dependencies": {
    "@loopback/authentication": "^7.0.2",
    "@loopback/authentication-jwt": "^0.7.7",
    "@loopback/authorization": "^0.9.0",
    "@loopback/boot": "^3.0.2",
    "@loopback/core": "^2.11.0",
    "@loopback/cron": "^0.5.0",
    "@loopback/repository": "^3.1.0",
    "@loopback/rest": "^8.0.0",
    "@loopback/rest-explorer": "^3.0.2",
    "@loopback/security": "^0.3.2",
    "@loopback/service-proxy": "^3.0.2",
    "@types/lodash": "^4.14.165",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "cross-var": "^1.1.0",
    "dayjs": "^1.10.4",
    "dotenv": "^8.2.0",
    "express-graphql": "^0.11.0",
    "graphql": "^15.3.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "loopback-connector-postgresql": "^5.1.0",
    "nodemailer": "^6.4.17",
    "openapi-to-graphql": "^2.2.5",
    "puppeteer": "^7.0.4",
    "short-uuid": "^4.1.0",
    "subscriptions-transport-ws": "^0.9.18",
    "tslib": "^2.0.0"
  },
  "devDependencies": {
    "@loopback/build": "^6.2.5",
    "@loopback/eslint-config": "^10.0.1",
    "@loopback/testlab": "^3.2.7",
    "@types/bcryptjs": "^2.4.2",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/node": "^10.17.37",
    "@types/nodemailer": "^6.4.0",
    "eslint": "^7.10.0",
    "source-map-support": "^0.5.19",
    "typescript": "~4.0.3"
  }
}
